@using PhygitalTool.Domain.Util
@using Microsoft.Extensions.Localization
@using PhygitalTool.Web.Resources
@model PhygitalTool.Domain.FlowPackage.Question
@inject IStringLocalizer<ResourcesFlow> Localizer

@{
    var culture = Model.Flow.Language switch
    {
        Language.Dutch => "nl",
        Language.French => "fr",
        Language.German => "de",
        _ => "en"
        };
    System.Globalization.CultureInfo.CurrentCulture = new System.Globalization.CultureInfo(culture);
    System.Globalization.CultureInfo.CurrentUICulture = new System.Globalization.CultureInfo(culture);
}

<div class="container-question-view">
    <div class="row">
        <div class="sidebar-container col-md-2 p-4">
            <img src="https://via.placeholder.com/150" alt="Placeholder afbeelding" class="qr-code">
            <h3 class="pt-3">@Localizer[ResourcesFlow.InterestHeading]</h3>
            <p>@Localizer[ResourcesFlow.IntrestDescription]</p>
            @{
                var scheme = Context.Request.Scheme;
                var host = Context.Request.Host.ToString();
                var actionPath = Url.Action("Index", "ContactInformation", new { id = Model.FlowId });

                var fullUrl = $"{scheme}://{host}{actionPath}";
            }

            <img class="qr-code pt-3" src="@Url.Action("Generate", "QrCode", new { data = fullUrl })" alt="QR Code" style="width:500px; height:500px;"/>


        </div>
        <div class="questionContainer col-md-10 p-4">
    
            <p id="QuestionId">@Model.QuestionId</p>
            <h1>@Model.QuestionText</h1>

            @if (!string.IsNullOrEmpty(Model.QuestionImage))
            {
                <img src="@Model.QuestionImage" alt="flowImage.png" class="img-responsive">
            }
            

            @if (Model.QuestionType == QuestionType.Open)
            {
                <form method="post" action="/Question/SaveAnswerAndUserInput"onsubmit="return validateForm()">
                    <textarea type="text" class="form-control" id="selectedAnswer" name="selectedAnswer" placeholder="Typ hier je antwoord"></textarea>
                    <button type="submit" class="btn btn-primary submit-button mt-3" id="Submit">Submit</button>
                    <input type="hidden" name="currentFlow" value="@Model.FlowId"/>
                    <input type="hidden" name="currentQuestion" value="@Model.QuestionId"/>
                    <input type="hidden" name="subThemeId" value="@Model.Flow.SubThemeId"/>

                </form>
            }
            @if (Model.QuestionType == QuestionType.Range)
            {
                <p>@Localizer[ResourcesFlow.ChoseOne]</p>

                <div class="slider-container">
                    <input type="range" min="0" max="4" value="2" step="1" class="slider" id="myRange">
                    <div class="slider-labels">
                        @foreach (var answerPossibility in Model.AnswerPossibilities)
                        {
                            <span class="answer-range m-2 p-4">@answerPossibility.Description</span>
                        }
                    </div>
                    <p class="pt-4">Gekozen: <span id="sliderValue">Ik weet het nog niet</span></p>
                    <form id="answersForm" method="post" action="/Question/SaveAnswerAndUserInput">
                        <!-- Knop om het formulier in te dienen -->
                        <button type="button" class="btn btn-primary submit-button" id="submitButton">Klaar</button>
                        <input type="hidden" name="currentFlow" value="@Model.FlowId"/>
                        <input type="hidden" name="currentQuestion" value="@Model.QuestionId"/>
                        <input type="hidden" name="subThemeId" value="@Model.Flow.SubThemeId"/>
                    </form>
                </div>
            }
            @if (Model.QuestionType == QuestionType.MultipleChoice)
            {
                <p>@Localizer[ResourcesFlow.ChoseMulptiple]</p>
                <div class="row">
                    <div class="col-md-6 left-column p-3">
                        @{
                            int counter = 0;
                            int buttonId = 1;
                            foreach (var answerPossibility in Model.AnswerPossibilities.Skip(Model.AnswerPossibilities.Count() / 2))
                            {
                                <button class="answerButton btn-answer col-12 m-2 p-4" id="button-@buttonId" value="@answerPossibility.Description">
                                    <i class="@(counter % 3 == 0 ? "bi bi-circle-fill" : counter % 3 == 1 ? "bi bi-square-fill" : "bi bi-triangle-fill")"></i>
                                    @answerPossibility.Description
                                </button>
                                counter++;
                                buttonId += 2;
                            }
                        }
                    </div>
                    <div class="col-md-6 right-column p-3">
                        @{
                            int counter2 = 0;
                            int buttonId2 = 2;
                            foreach (var answerPossibility in Model.AnswerPossibilities.Take(Model.AnswerPossibilities.Count() / 2))
                            {
                                <button class="answerButton btn-answer col-12 m-2 p-4" id="button-@buttonId2" value="@answerPossibility.Description">
                                    <i class="@(counter2 % 3 == 0 ? "bi bi-star-fill" : counter2 % 3 == 1 ? "bi bi-heart-fill" : "bi bi-diamond-fill")"></i>
                                    @answerPossibility.Description
                                </button>
                                counter2++;
                                buttonId2 += 2;
                            }
                        }
                    </div>
                    <form id="answersForm" method="post" action="/Question/SaveAnswersAndUserInput">
                        <button type="button" class="btn btn-primary submit-button" id="submitButton">@Localizer[ResourcesFlow.Submit]</button>
                        <input type="hidden" name="currentFlow" value="@Model.FlowId"/>
                        <input type="hidden" name="currentQuestion" value="@Model.QuestionId"/>
                        <input type="hidden" name="subThemeId" value="@Model.Flow.SubThemeId"/>
                    </form>
                </div>
            }
            @if (Model.QuestionType == QuestionType.SingleChoice)
            {
                <p>@Localizer[ResourcesFlow.ChoseOne]</p>

                <div class="row">
                    <div class="col-md-6 left-column p-3">
                        @{
                            int counter = 0;
                            int buttonId = 1;
                            foreach (var answerPossibility in Model.AnswerPossibilities.Skip(Model.AnswerPossibilities.Count() / 2))
                            {
                                <button class="btn-answer col-12 m-2 p-4 answerButtonSingleChoice" id="button-@buttonId" name="selectedAnswer" value="@answerPossibility.Description">
                                    <i class="@(counter % 3 == 0 ? "bi bi-circle-fill" : counter % 3 == 1 ? "bi bi-square-fill" : "bi bi-triangle-fill")"></i>
                                    @answerPossibility.Description
                                    <div class="button-user-selected-container">
                                        <p class="button-@buttonId-user-selected"></p>
                                    </div>
                                </button>
                                counter++;
                                buttonId += 2;
                            }
                        }
                    </div>
                    <div class="col-md-6 right-column p-3">
                        @{
                            int counter2 = 0;
                            int buttonId2 = 2;
                            foreach (var answerPossibility in Model.AnswerPossibilities.Take(Model.AnswerPossibilities.Count() / 2))
                            {
                                <button class="btn-answer col-12 m-2 p-4 answerButtonSingleChoice" id="button-@buttonId2" name="selectedAnswer" value="@answerPossibility.Description">
                                    <i class="@(counter2 % 3 == 0 ? "bi bi-star-fill" : counter2 % 3 == 1 ? "bi bi-heart-fill" : "bi bi-diamond-fill")"></i>
                                    @answerPossibility.Description
                                    <div class="button-user-selected-container">
                                        <p class="button-user-selected"></p>
                                    </div>
                                </button>
                                counter2++;
                                buttonId2 += 2;
                            }
                        }
                    </div>
                </div>

                <form  id="answersForm" method="post" action="/Question/SaveAnswerAndUserInput" class="answersFormSingleChoice">
                    <button type="button" class="btn btn-primary submit-button submitButtonSingleChoice" id="submitButton">@Localizer[ResourcesFlow.Submit]</button>
                    <input type="hidden" name="currentFlow" value="@Model.FlowId"/>
                    <input type="hidden" name="currentQuestion" value="@Model.QuestionId"/>
                    <input type="hidden" name="subThemeId" value="@Model.Flow.SubThemeId"/>
                </form>
            }
            <div class="container">
                <!-- Progress Bar -->
                <div class="progress">
                    <div class="progress-bar " role="progressbar" style="width: 0%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
            </div>
        </div>

        <div>
            @if (Model.Flow.FlowType == FlowType.Circular)
            {
                <style>
                    .submit-button {
                        display: none;
                    }
                </style>

                <div class="timer-container">
                    <p>Timer: </p>
                    <p id="circular-timer"></p>
                </div>
                 <div>
                    @*<a class="nav-link text-dark" asp-area="" asp-controller="CircularFlow" asp-action="EndFlow" asp-route-flowId="@Model.Flow.FlowId">STOP</a>*@
                </div>
            }

        </div>


    </div>
</div>

@section Scripts
{
     <script id="questionPage-script" src="~/dist/questionsPage.entry.js" data-flowtype="@Model.Flow.FlowType.ToString().ToLower()" defer="defer" ></script>
    <script id="questionPage-script" src="~/dist/hubConnection.entry.js" defer="defer" ></script>
}