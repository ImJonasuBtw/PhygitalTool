{"version":3,"file":"circularFlow.entry.js","mappings":";;;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://phygital-tool-web/./src/js/circularFlow.ts"],"sourcesContent":["\"use strict\";\nconst timerLength = 5;\n// timer that clicks the submit button when finished\nfunction timer() {\n    let button;\n    button = document.getElementById('submitButton');\n    if (button == null) {\n        button = document.getElementById('submitButtonCircular');\n    }\n    if (button == null) {\n        button = document.getElementById('Submit');\n    }\n    if (button) {\n        function clickButton() {\n            if (button) {\n                button.click();\n            }\n        }\n        const timer = setTimeout(clickButton, timerLength * 1000);\n        button.addEventListener('click', function () {\n            clearTimeout(timer);\n        });\n    }\n}\n// text update for visual timer\nfunction setTimerText() {\n    const timerElement = document.getElementById('circular-timer');\n    let timeLeft = timerLength;\n    if (timerElement) {\n        timerElement.textContent = timeLeft.toString();\n        const countdown = setInterval(() => {\n            timeLeft--;\n            timerElement.textContent = timeLeft.toString();\n            if (timeLeft <= 0) {\n                clearInterval(countdown);\n                timerElement.textContent = \"0\";\n            }\n        }, 1000);\n    }\n}\ndocument.addEventListener('DOMContentLoaded', () => {\n    timer();\n    setTimerText();\n});\n"],"names":[],"sourceRoot":""}